'''
Created on Jun 21, 2016

@author: gaston
'''
from heuristica.construccion.nearest_neighbor import DISTANCES, print_route


route = nearest_neighbor()

def calculate_distance(route):
    distance = 0
    idx = 0
    
    for bank in route[1:]:
        previous_bank = route[idx - 1]
        dist_from_previous_bank = DISTANCES[previous_bank][bank]
        distance += dist_from_previous_bank
        idx += 1
    
    return distance

done = False
while not done:
    
    i = 1
    change = False
    while (i <= N - 1) and not change:
        j = i + 1
        while (j <= N) and not change:
            swap(route, i, j)
            if ((is_route_possible(route)) and (calculate_distance(route) < distance)):
                change = True
            else:
                swap(route, i, j)
            j += 1
        
        i += 1
    
    if(i==N):
        done = True
        

print_route(route)